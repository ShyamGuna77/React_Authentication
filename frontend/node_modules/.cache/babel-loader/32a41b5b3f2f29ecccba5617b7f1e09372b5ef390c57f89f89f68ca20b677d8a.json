{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SHYAM\\\\OneDrive\\\\Desktop\\\\ReactProjects\\\\React_Auth\\\\01-starting-project\\\\frontend\\\\src\\\\pages\\\\Authentication.js\";\nimport AuthForm from '../components/AuthForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AuthenticationPage() {\n  return /*#__PURE__*/_jsxDEV(AuthForm, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 10\n  }, this);\n}\n_c = AuthenticationPage;\nexport default AuthenticationPage;\nexport async function action({\n  request\n}) {\n  const searchparams = new URL(request.url).searchParams;\n  const mode = searchparams.get('mode') || \"login\";\n  if (mode !== 'login' && mode !== \"signup\") {\n    throw new Error({\n      message: \"Unsupported mode\"\n    }, {\n      status: 422\n    });\n  }\n  const data = await request.formData();\n  const authData = {\n    email: data.get('email'),\n    password: data.get('password')\n  };\n  const response = await fetch('http://localhost:8000/' + mode, {\n    method: \"POST\",\n    headers: {\n      'Content-Type': \"application/json\"\n    },\n    body: JSON.stringify(authData)\n  });\n  if (response.status === 422 || response.status === 401) {\n    return response;\n  }\n}\nvar _c;\n$RefreshReg$(_c, \"AuthenticationPage\");","map":{"version":3,"names":["AuthForm","jsxDEV","_jsxDEV","AuthenticationPage","fileName","_jsxFileName","lineNumber","columnNumber","_c","action","request","searchparams","URL","url","searchParams","mode","get","Error","message","status","data","formData","authData","email","password","response","fetch","method","headers","body","JSON","stringify","$RefreshReg$"],"sources":["C:/Users/SHYAM/OneDrive/Desktop/ReactProjects/React_Auth/01-starting-project/frontend/src/pages/Authentication.js"],"sourcesContent":["\nimport AuthForm from '../components/AuthForm';\n\nfunction AuthenticationPage() {\n  return <AuthForm />;\n}\n\nexport default AuthenticationPage;\n\n\nexport async function action({request}){\n  const searchparams = new URL(request.url).searchParams\n const mode =  searchparams.get('mode')||\"login\"\n  if(mode !=='login' && mode !== \"signup\"){\n    throw new Error ({message:\"Unsupported mode\"},{status:422})\n  }\n\n\n  const data = await request.formData();\n  const authData = {\n    email:data.get('email'),\n    password:data.get('password')\n  }\n  const response = await fetch('http://localhost:8000/'+mode,{\n    method:\"POST\",\n    headers:{\n      'Content-Type':\"application/json\"\n    },\n    body:JSON.stringify(authData)\n  });\n\n  if(response.status===422 || response.status ===401){\n    return response;\n  }\n}"],"mappings":";AACA,OAAOA,QAAQ,MAAM,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9C,SAASC,kBAAkBA,CAAA,EAAG;EAC5B,oBAAOD,OAAA,CAACF,QAAQ;IAAAI,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AACrB;AAACC,EAAA,GAFQL,kBAAkB;AAI3B,eAAeA,kBAAkB;AAGjC,OAAO,eAAeM,MAAMA,CAAC;EAACC;AAAO,CAAC,EAAC;EACrC,MAAMC,YAAY,GAAG,IAAIC,GAAG,CAACF,OAAO,CAACG,GAAG,CAAC,CAACC,YAAY;EACvD,MAAMC,IAAI,GAAIJ,YAAY,CAACK,GAAG,CAAC,MAAM,CAAC,IAAE,OAAO;EAC9C,IAAGD,IAAI,KAAI,OAAO,IAAIA,IAAI,KAAK,QAAQ,EAAC;IACtC,MAAM,IAAIE,KAAK,CAAE;MAACC,OAAO,EAAC;IAAkB,CAAC,EAAC;MAACC,MAAM,EAAC;IAAG,CAAC,CAAC;EAC7D;EAGA,MAAMC,IAAI,GAAG,MAAMV,OAAO,CAACW,QAAQ,CAAC,CAAC;EACrC,MAAMC,QAAQ,GAAG;IACfC,KAAK,EAACH,IAAI,CAACJ,GAAG,CAAC,OAAO,CAAC;IACvBQ,QAAQ,EAACJ,IAAI,CAACJ,GAAG,CAAC,UAAU;EAC9B,CAAC;EACD,MAAMS,QAAQ,GAAG,MAAMC,KAAK,CAAC,wBAAwB,GAACX,IAAI,EAAC;IACzDY,MAAM,EAAC,MAAM;IACbC,OAAO,EAAC;MACN,cAAc,EAAC;IACjB,CAAC;IACDC,IAAI,EAACC,IAAI,CAACC,SAAS,CAACT,QAAQ;EAC9B,CAAC,CAAC;EAEF,IAAGG,QAAQ,CAACN,MAAM,KAAG,GAAG,IAAIM,QAAQ,CAACN,MAAM,KAAI,GAAG,EAAC;IACjD,OAAOM,QAAQ;EACjB;AACF;AAAC,IAAAjB,EAAA;AAAAwB,YAAA,CAAAxB,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}